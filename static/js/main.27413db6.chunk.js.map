{"version":3,"sources":["constants/history.js","components/SignOut/index.js","constants/routes.js","components/Navigation/index.js","components/Session/queries.js","components/Session/withSession.js","components/Landing/index.js","components/Error/index.js","components/SignUp/index.js","components/SignIn/SignInForm.js","components/SignIn/index.js","components/Session/withAuthorization.js","components/Account/index.js","components/Admin/index.js","components/App/index.js","index.js","constants/theme.js"],"names":["createHistory","signOut","client","localStorage","removeItem","resetStore","history","push","SignOutButton","Button","color","type","onClick","useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","NavigationAuth","session","classes","className","AppBar","Toolbar","Typography","variant","SignOut","NavigationNonAuth","href","Navigation","me","GET_ME","gql","withSession","Component","props","query","data","refetch","ErrorMessage","error","message","SIGN_UP","INITIAL_STATE","username","email","password","passwordConfirmation","SignUpForm","state","onChange","event","target","name","value","this","setState","onSubmit","signUp","then","a","setItem","token","preventDefault","render","isInvalid","mutation","variables","loading","placeholder","disabled","Error","SignUpLink","Link","to","withRouter","SIGN_IN","login","SignInForm","signIn","TextField","required","id","label","withStyles","margin","width","withTheme","CssBaseline","Container","maxWidth","withAuthorization","conditionFn","networkStatus","Redirect","role","HashRouter","basename","Route","exact","path","component","SignUp","SignIn","Account","Admin","httpLink","HttpLink","uri","process","authLink","ApolloLink","operation","forward","setContext","headers","getItem","errorLink","onError","graphQLErrors","networkError","forEach","locations","console","log","statusCode","link","from","cache","InMemoryCache","ApolloClient","createMuiTheme","ReactDOM","ThemeProvider","document","getElementById"],"mappings":"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","file":"static/js/main.27413db6.chunk.js","sourcesContent":["import createHistory from 'history/createBrowserHistory';\n\nexport default createHistory();\n","import React from 'react';\nimport { ApolloConsumer } from 'react-apollo';\nimport Button from '@material-ui/core/Button';\n\nimport * as routes from '../../constants/routes';\nimport history from '../../constants/history';\n\nconst SignOutButton = () => (\n  <ApolloConsumer>\n    {(client) => (\n      <Button color=\"inherit\" type=\"button\" onClick={() => signOut(client)}>\n        Sign Out\n      </Button>\n    )}\n  </ApolloConsumer>\n);\n\nconst signOut = (client) => {\n  localStorage.removeItem('token');\n  client.resetStore();\n  history.push(routes.SIGN_IN);\n};\n\nexport { signOut };\n\nexport default SignOutButton;\n","export const LANDING = '/';\nexport const SIGN_UP = '/signup';\nexport const SIGN_IN = '/signin';\nexport const ACCOUNT = '/account';\nexport const ADMIN = '/admin';\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n// import Link from '@material-ui/core/Link';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\n\nimport * as routes from '../../constants/routes';\nimport SignOutButton from '../SignOut';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n}));\n\nconst Navigation = ({ session }) => (\n  <div>\n    {session && session.me ? (\n      <NavigationAuth session={session} />\n    ) : (\n      <NavigationNonAuth />\n    )}\n  </div>\n);\n\nconst NavigationAuth = ({ session }) => {\n  const classes = useStyles();\n  return (\n    <div className={classes}>\n      <AppBar>\n        <Toolbar>\n          <Typography variant=\"h6\" className={classes.title}>\n            QR^2\n          </Typography>\n          <SignOutButton />\n        </Toolbar>\n      </AppBar>\n      <Toolbar />\n    </div>\n  );\n};\n\nconst NavigationNonAuth = () => {\n  const classes = useStyles();\n  return (\n    <div className={classes}>\n      <AppBar>\n        <Toolbar>\n          <Typography variant=\"h6\" className={classes.title}>\n            QR^2\n          </Typography>\n          <Typography>\n            <Button color=\"primary.contrastText\" href={`${routes.SIGN_IN}`}>Sign In</Button>\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <Toolbar />\n    </div>\n  );\n};\n\nexport default Navigation;\n","import gql from 'graphql-tag';\n\nexport const GET_ME = gql`\n  {\n    me {\n      id\n      username\n      email\n      role\n    }\n  }\n`;\n","import React from 'react';\nimport { Query } from 'react-apollo';\nimport { GET_ME } from './queries';\n\nconst withSession = Component => props => (\n  <Query query={GET_ME}>\n    {({ data, refetch }) => (\n      <Component {...props} session={data} refetch={refetch} />\n    )}\n  </Query>\n);\n\nexport default withSession;\n","import React from 'react';\n\nimport withSession from '../Session/withSession';\n\n\nconst Landing = ({ session }) => (\n  <div>\n    <h2>Landing Page</h2>\n\n  </div>\n);\n\nexport default withSession(Landing);\n","import React from 'react';\n\nconst ErrorMessage = ({ error }) => (\n  <div>\n    <small>{error.message}</small>\n  </div>\n);\n\nexport default ErrorMessage;\n","import React, { Component } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { Mutation } from 'react-apollo';\nimport gql from 'graphql-tag';\n\nimport * as routes from '../../constants/routes';\nimport ErrorMessage from '../Error';\n\nconst SIGN_UP = gql`\n  mutation($username: String!, $email: String!, $password: String!) {\n    signUp(username: $username, email: $email, password: $password) {\n      token\n    }\n  }\n`;\n\nconst INITIAL_STATE = {\n  username: '',\n  email: '',\n  password: '',\n  passwordConfirmation: '',\n};\n\nconst SignUpPage = ({ history, refetch }) => (\n  <div>\n    <h1>SignUp</h1>\n    <SignUpForm history={history} refetch={refetch} />\n  </div>\n);\n\nclass SignUpForm extends Component {\n  state = { ...INITIAL_STATE };\n\n  onChange = event => {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  };\n\n  onSubmit = (event, signUp) => {\n    signUp().then(async ({ data }) => {\n      this.setState({ ...INITIAL_STATE });\n\n      localStorage.setItem('token', data.signUp.token);\n\n      await this.props.refetch();\n\n      this.props.history.push(routes.LANDING);\n    });\n\n    event.preventDefault();\n  };\n\n  render() {\n    const {\n      username,\n      email,\n      password,\n      passwordConfirmation,\n    } = this.state;\n\n    const isInvalid =\n      password !== passwordConfirmation ||\n      password === '' ||\n      email === '' ||\n      username === '';\n\n    return (\n      <Mutation\n        mutation={SIGN_UP}\n        variables={{ username, email, password }}\n      >\n        {(signUp, { data, loading, error }) => (\n          <form onSubmit={event => this.onSubmit(event, signUp)}>\n            <input\n              name=\"username\"\n              value={username}\n              onChange={this.onChange}\n              type=\"text\"\n              placeholder=\"Full Name\"\n            />\n            <input\n              name=\"email\"\n              value={email}\n              onChange={this.onChange}\n              type=\"text\"\n              placeholder=\"Email Address\"\n            />\n            <input\n              name=\"password\"\n              value={password}\n              onChange={this.onChange}\n              type=\"password\"\n              placeholder=\"Password\"\n            />\n            <input\n              name=\"passwordConfirmation\"\n              value={passwordConfirmation}\n              onChange={this.onChange}\n              type=\"password\"\n              placeholder=\"Confirm Password\"\n            />\n            <button disabled={isInvalid || loading} type=\"submit\">\n              Sign Up\n            </button>\n\n            {error && <ErrorMessage error={error} />}\n          </form>\n        )}\n      </Mutation>\n    );\n  }\n}\n\nconst SignUpLink = () => (\n  <p>\n    Don't have an account? <Link to={routes.SIGN_UP}>Sign Up</Link>\n  </p>\n);\n\nexport default withRouter(SignUpPage);\n\nexport { SignUpForm, SignUpLink };\n","import React, { Component } from 'react';\nimport gql from 'graphql-tag';\nimport { Mutation } from 'react-apollo';\nimport { withStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\n\n\nimport * as routes from '../../constants/routes';\nimport ErrorMessage from '../Error';\n\nconst SIGN_IN = gql`\n  mutation($login: String!, $password: String!) {\n    signIn(login: $login, password: $password) {\n      token\n    }\n  }\n`;\n\nconst useStyles = (theme) => ({\n  root: {\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1),\n      width: '100%',\n    },\n  },\n});\n\nconst INITIAL_STATE = {\n  login: '',\n  password: '',\n};\n\nclass SignInForm extends Component {\n  state = { ...INITIAL_STATE };\n\n  onChange = (event) => {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  };\n\n  onSubmit = (event, signIn) => {\n    signIn().then(async ({ data }) => {\n      this.setState({ ...INITIAL_STATE });\n\n      localStorage.setItem('token', data.signIn.token);\n\n      await this.props.refetch();\n\n      this.props.history.push(routes.LANDING);\n    });\n\n    event.preventDefault();\n  };\n\n  render() {\n    const { login, password } = this.state;\n    const { classes } = this.props;\n\n    const isInvalid = password === '' || login === '';\n\n    return (\n      <Mutation mutation={SIGN_IN} variables={{ login, password }}>\n        {(signIn, { data, loading, error }) => (\n          <form\n            className={classes.root}\n            onSubmit={(event) => this.onSubmit(event, signIn)}\n          >\n            <div>\n              <TextField\n                required\n                id=\"login-filled-required\"\n                label=\"Email Or Username\"\n                variant=\"outlined\"\n                value={login}\n                onChange={this.onChange}\n                placeholder=\"Email or Username\"\n                name=\"login\"\n              />\n              <TextField\n                variant=\"outlined\"\n                required\n                id=\"pw-filled-required\"\n                name=\"password\"\n                value={password}\n                onChange={this.onChange}\n                type=\"password\"\n                placeholder=\"Password\"\n              />\n            </div>\n            <Button disabled={isInvalid || loading} type=\"submit\">\n              Sign In\n            </Button>\n\n            {error && <ErrorMessage error={error} />}\n          </form>\n        )}\n      </Mutation>\n    );\n  }\n}\n\nexport default withStyles(useStyles, { withTheme: true })(SignInForm);\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { Mutation } from 'react-apollo';\nimport gql from 'graphql-tag';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport TextField from '@material-ui/core/TextField';\n\nimport { SignUpLink } from '../SignUp';\nimport SignInForm from './SignInForm';\nimport * as routes from '../../constants/routes';\nimport ErrorMessage from '../Error';\n\nconst SIGN_IN = gql`\n  mutation($login: String!, $password: String!) {\n    signIn(login: $login, password: $password) {\n      token\n    }\n  }\n`;\n\nconst SignInPage = ({ history, refetch }) => (\n  <>\n    <CssBaseline />\n    <Container maxWidth=\"sm\">\n      <h1>SignIn</h1>\n      <SignInForm history={history} refetch={refetch} />\n      <SignUpLink />\n    </Container>\n  </>\n);\n\nexport default withRouter(SignInPage);\n","import React from 'react';\nimport { Query } from 'react-apollo';\nimport { Redirect } from 'react-router-dom';\n\nimport * as routes from '../../constants/routes';\nimport { GET_ME } from './queries';\n\nconst withAuthorization = conditionFn => Component => props => (\n  <Query query={GET_ME}>\n    {({ data, networkStatus }) => {\n      if (networkStatus < 7) {\n        return null;\n      }\n\n      return conditionFn(data) ? (\n        <Component {...props} />\n      ) : (\n        <Redirect to={routes.SIGN_IN} />\n      );\n    }}\n  </Query>\n);\n\nexport default withAuthorization;\n","import React from 'react';\n\nimport withAuthorization from '../Session/withAuthorization';\n\nconst AccountPage = () => (\n  <div>\n    <h1>Account Page</h1>\n  </div>\n);\n\nexport default withAuthorization(session => session && session.me)(\n  AccountPage,\n);\n","import React from 'react';\n\nimport withAuthorization from '../Session/withAuthorization';\n\nconst AdminPage = () => (\n  <div>\n    <h1>Admin Page</h1>\n  </div>\n);\n\nexport default withAuthorization(\n  session => session && session.me && session.me.role === 'ADMIN',\n)(AdminPage);\n","import React from 'react';\nimport { HashRouter, Route } from 'react-router-dom';\n\nimport Navigation from '../Navigation';\nimport LandingPage from '../Landing';\nimport SignUpPage from '../SignUp';\nimport SignInPage from '../SignIn';\nimport AccountPage from '../Account';\nimport AdminPage from '../Admin';\nimport withSession from '../Session/withSession';\n\nimport * as routes from '../../constants/routes';\nimport history from '../../constants/history';\n\nconst App = ({ session, refetch }) => (\n  <HashRouter basename=\"/qrr-frontend\" history={history}>\n    <div>\n      <Navigation session={session} />\n      <Route\n        exact\n        path={routes.LANDING}\n        component={() => <LandingPage />}\n      />\n      <Route\n        exact\n        path={routes.SIGN_UP}\n        component={() => <SignUpPage refetch={refetch} />}\n      />\n      <Route\n        exact\n        path={routes.SIGN_IN}\n        component={() => <SignInPage refetch={refetch} />}\n      />\n      <Route\n        exact\n        path={routes.ACCOUNT}\n        component={() => <AccountPage />}\n      />\n      <Route\n        exact\n        path={routes.ADMIN}\n        component={() => <AdminPage />}\n      />\n    </div>\n  </HashRouter>\n);\n\nexport default withSession(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { ApolloProvider } from 'react-apollo';\nimport { ApolloClient } from 'apollo-client';\nimport { ApolloLink } from 'apollo-link';\nimport { HttpLink } from 'apollo-link-http';\nimport { onError } from 'apollo-link-error';\nimport { InMemoryCache } from 'apollo-cache-inmemory';\nimport {\n  createMuiTheme,\n  ThemeProvider,\n} from '@material-ui/core/styles';\n\nimport materialUiTheme from './constants/theme';\nimport App from './components/App';\nimport { signOut } from './components/SignOut';\n\n// APOLLO CONFIGs\nconst httpLink = new HttpLink({\n  uri: process.env.REACT_APP_GRAPHQL_ENDPOINT,\n});\n\nconst authLink = new ApolloLink((operation, forward) => {\n  operation.setContext(({ headers = {} }) => {\n    const token = localStorage.getItem('token');\n\n    if (token) {\n      headers = { ...headers, 'x-token': token };\n    }\n\n    return { headers };\n  });\n\n  return forward(operation);\n});\n\nconst errorLink = onError(({ graphQLErrors, networkError }) => {\n  if (graphQLErrors) {\n    graphQLErrors.forEach(({ message, locations, path }) => {\n      console.log('GraphQL error', message);\n\n      if (message === 'UNAUTHENTICATED') {\n        signOut(client);\n      }\n    });\n  }\n\n  if (networkError) {\n    console.log('Network error', networkError);\n\n    if (networkError.statusCode === 401) {\n      signOut(client);\n    }\n  }\n});\n\nconst link = ApolloLink.from([authLink, errorLink, httpLink]);\n\nconst cache = new InMemoryCache();\n\nconst client = new ApolloClient({\n  link,\n  cache,\n});\n\n// MATERIAL-UI\nconst theme = createMuiTheme(materialUiTheme);\n\nReactDOM.render(\n  <ApolloProvider client={client}>\n    <ThemeProvider theme={theme}>\n      <App />\n    </ThemeProvider>\n  </ApolloProvider>,\n  document.getElementById('root'),\n);\n","export default {\n    \"palette\":{\n       \"common\":{\n          \"black\":\"#000\",\n          \"white\":\"#fff\"\n       },\n       \"background\":{\n          \"paper\":\"#fff\",\n          \"default\":\"#fafafa\"\n       },\n       \"primary\":{\n          \"light\":\"rgba(116, 195, 30, 1)\",\n          \"main\":\"rgba(87, 161, 3, 1)\",\n          \"dark\":\"rgba(65, 117, 5, 1)\",\n          \"contrastText\":\"#fff\"\n       },\n       \"secondary\":{\n          \"light\":\"rgba(74, 144, 226, 1)\",\n          \"main\":\"rgba(9, 96, 198, 1)\",\n          \"dark\":\"rgba(5, 61, 128, 1)\",\n          \"contrastText\":\"#fff\"\n       },\n       \"error\":{\n          \"light\":\"#e57373\",\n          \"main\":\"#f44336\",\n          \"dark\":\"#d32f2f\",\n          \"contrastText\":\"#fff\"\n       },\n       \"text\":{\n          \"primary\":\"rgba(0, 0, 0, 0.87)\",\n          \"secondary\":\"rgba(0, 0, 0, 0.54)\",\n          \"disabled\":\"rgba(0, 0, 0, 0.38)\",\n          \"hint\":\"rgba(0, 0, 0, 0.38)\"\n       }\n    }\n }"],"sourceRoot":""}