{"version":3,"sources":["constants/history.js","components/SignOut/index.js","constants/routes.js","components/Navigation/index.js","components/Session/queries.js","components/Session/withSession.js","components/Recipe/Recipes/index.js","components/Landing/index.js","components/Error/index.js","components/SignUp/index.js","components/SignIn/SignInForm.js","components/SignIn/index.js","components/Session/withAuthorization.js","components/Account/index.js","components/Admin/index.js","components/App/index.js","index.js","constants/theme.js"],"names":["createHistory","basename","process","signOut","client","localStorage","removeItem","resetStore","history","push","SignOutButton","Button","color","type","onClick","useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","NavigationAuth","session","classes","className","AppBar","Toolbar","Typography","variant","SignOut","NavigationNonAuth","Link","to","Navigation","me","GET_ME","gql","withSession","Component","props","query","data","refetch","GET_ALL_RECIPES","Recipes","console","log","recipes","map","recipe","key","id","name","ErrorMessage","error","message","SIGN_UP","INITIAL_STATE","username","email","password","passwordConfirmation","SignUpForm","state","onChange","event","target","value","this","setState","onSubmit","signUp","then","a","setItem","token","preventDefault","render","isInvalid","mutation","variables","loading","placeholder","disabled","Error","SignUpLink","withRouter","SIGN_IN","login","SignInForm","signIn","TextField","required","label","withStyles","margin","width","withTheme","CssBaseline","Container","maxWidth","withAuthorization","conditionFn","networkStatus","Redirect","role","Router","Route","exact","path","component","SignUp","SignIn","Account","Admin","httpLink","HttpLink","uri","authLink","ApolloLink","operation","forward","setContext","headers","getItem","errorLink","onError","graphQLErrors","networkError","forEach","locations","statusCode","link","from","cache","InMemoryCache","ApolloClient","createMuiTheme","ReactDOM","ThemeProvider","document","getElementById"],"mappings":"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","file":"static/js/main.a20e3935.chunk.js","sourcesContent":["import createHistory from 'history/createBrowserHistory';\n\nexport default createHistory({\n  basename: process.env.PUBLIC_URL,\n});\n","import React from 'react';\nimport { ApolloConsumer } from 'react-apollo';\nimport Button from '@material-ui/core/Button';\n\nimport * as routes from '../../constants/routes';\nimport history from '../../constants/history';\n\nconst SignOutButton = () => (\n  <ApolloConsumer>\n    {(client) => (\n      <Button color=\"inherit\" type=\"button\" onClick={() => signOut(client)}>\n        Sign Out\n      </Button>\n    )}\n  </ApolloConsumer>\n);\n\nconst signOut = (client) => {\n  localStorage.removeItem('token');\n  client.resetStore();\n  history.push(routes.SIGN_IN);\n};\n\nexport { signOut };\n\nexport default SignOutButton;\n","export const LANDING = '/';\nexport const SIGN_UP = '/signup';\nexport const SIGN_IN = '/signin';\nexport const ACCOUNT = '/account';\nexport const ADMIN = '/admin';\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Link } from 'react-router-dom';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\n\nimport * as routes from '../../constants/routes';\nimport SignOutButton from '../SignOut';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n}));\n\nconst Navigation = ({ session }) => (\n  <div>\n    {session && session.me ? (\n      <NavigationAuth session={session} />\n    ) : (\n      <NavigationNonAuth />\n    )}\n  </div>\n);\n\nconst NavigationAuth = ({ session }) => {\n  const classes = useStyles();\n  return (\n    <div className={classes}>\n      <AppBar>\n        <Toolbar>\n          <Typography variant=\"h6\" className={classes.title}>\n            QR^2\n          </Typography>\n          <SignOutButton />\n        </Toolbar>\n      </AppBar>\n      <Toolbar />\n    </div>\n  );\n};\n\nconst NavigationNonAuth = () => {\n  const classes = useStyles();\n  return (\n    <div className={classes}>\n      <AppBar>\n        <Toolbar>\n          <Typography variant=\"h6\" className={classes.title}>\n            QR^2\n          </Typography>\n          <Typography>\n            <Link to={routes.SIGN_IN}>\n              <Button color=\"primary\">Sign In</Button>\n            </Link>\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <Toolbar />\n    </div>\n  );\n};\n\nexport default Navigation;\n","import gql from 'graphql-tag';\n\nexport const GET_ME = gql`\n  {\n    me {\n      id\n      username\n      email\n      role\n    }\n  }\n`;\n","import React from 'react';\nimport { Query } from 'react-apollo';\nimport { GET_ME } from './queries';\n\nconst withSession = Component => props => (\n  <Query query={GET_ME}>\n    {({ data, refetch }) => (\n      <Component {...props} session={data} refetch={refetch} />\n    )}\n  </Query>\n);\n\nexport default withSession;\n","import React, { Component } from 'react';\nimport { Query } from 'react-apollo';\nimport gql from 'graphql-tag';\n\nconst GET_ALL_RECIPES = gql`\n  query {\n    recipes {\n        id\n        name\n        author{\n          username\n        }\n        ingredients {\n          qty\n          item {\n            name\n          }\n        }\n        instructions {\n          text\n          ingredients {\n            item {\n              name\n            }\n          }\n        }\n      }\n  }\n`;\n\n\nexport const Recipes = props => {\n    return (\n        <Query query={GET_ALL_RECIPES}>\n            {props => {\n                const {data} = props;\n                console.log({data, props})\n                return(\n                  <div>\n                    {data.recipes && data.recipes.map(recipe => {\n                      return (\n                        <li key={recipe.id}>{recipe.name}</li>\n                      )\n                    })}\n                    \n                  </div>\n                )\n            }}\n        </Query>\n    )\n}","import React from 'react';\n\nimport withSession from '../Session/withSession';\nimport {Recipes} from \"../Recipe/Recipes/\"\n\n\nconst Landing = ({ session }) => (\n  <div>\n    <h2>Recipes</h2>\n    <Recipes />\n  </div>\n);\n\nexport default withSession(Landing);\n","import React from 'react';\n\nconst ErrorMessage = ({ error }) => (\n  <div>\n    <small>{error.message}</small>\n  </div>\n);\n\nexport default ErrorMessage;\n","import React, { Component } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { Mutation } from 'react-apollo';\nimport gql from 'graphql-tag';\n\nimport * as routes from '../../constants/routes';\nimport ErrorMessage from '../Error';\n\nconst SIGN_UP = gql`\n  mutation($username: String!, $email: String!, $password: String!) {\n    signUp(username: $username, email: $email, password: $password) {\n      token\n    }\n  }\n`;\n\nconst INITIAL_STATE = {\n  username: '',\n  email: '',\n  password: '',\n  passwordConfirmation: '',\n};\n\nconst SignUpPage = ({ history, refetch }) => (\n  <div>\n    <h1>SignUp</h1>\n    <SignUpForm history={history} refetch={refetch} />\n  </div>\n);\n\nclass SignUpForm extends Component {\n  state = { ...INITIAL_STATE };\n\n  onChange = event => {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  };\n\n  onSubmit = (event, signUp) => {\n    signUp().then(async ({ data }) => {\n      this.setState({ ...INITIAL_STATE });\n\n      localStorage.setItem('token', data.signUp.token);\n\n      await this.props.refetch();\n\n      this.props.history.push(routes.LANDING);\n    });\n\n    event.preventDefault();\n  };\n\n  render() {\n    const {\n      username,\n      email,\n      password,\n      passwordConfirmation,\n    } = this.state;\n\n    const isInvalid =\n      password !== passwordConfirmation ||\n      password === '' ||\n      email === '' ||\n      username === '';\n\n    return (\n      <Mutation\n        mutation={SIGN_UP}\n        variables={{ username, email, password }}\n      >\n        {(signUp, { data, loading, error }) => (\n          <form onSubmit={event => this.onSubmit(event, signUp)}>\n            <input\n              name=\"username\"\n              value={username}\n              onChange={this.onChange}\n              type=\"text\"\n              placeholder=\"Full Name\"\n            />\n            <input\n              name=\"email\"\n              value={email}\n              onChange={this.onChange}\n              type=\"text\"\n              placeholder=\"Email Address\"\n            />\n            <input\n              name=\"password\"\n              value={password}\n              onChange={this.onChange}\n              type=\"password\"\n              placeholder=\"Password\"\n            />\n            <input\n              name=\"passwordConfirmation\"\n              value={passwordConfirmation}\n              onChange={this.onChange}\n              type=\"password\"\n              placeholder=\"Confirm Password\"\n            />\n            <button disabled={isInvalid || loading} type=\"submit\">\n              Sign Up\n            </button>\n\n            {error && <ErrorMessage error={error} />}\n          </form>\n        )}\n      </Mutation>\n    );\n  }\n}\n\nconst SignUpLink = () => (\n  <p>\n    Don't have an account? <Link to={routes.SIGN_UP}>Sign Up</Link>\n  </p>\n);\n\nexport default withRouter(SignUpPage);\n\nexport { SignUpForm, SignUpLink };\n","import React, { Component } from 'react';\nimport gql from 'graphql-tag';\nimport { Mutation } from 'react-apollo';\nimport { withStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\n\n\nimport * as routes from '../../constants/routes';\nimport ErrorMessage from '../Error';\n\nconst SIGN_IN = gql`\n  mutation($login: String!, $password: String!) {\n    signIn(login: $login, password: $password) {\n      token\n    }\n  }\n`;\n\nconst useStyles = (theme) => ({\n  root: {\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1),\n      width: '100%',\n    },\n  },\n});\n\nconst INITIAL_STATE = {\n  login: '',\n  password: '',\n};\n\nclass SignInForm extends Component {\n  state = { ...INITIAL_STATE };\n\n  onChange = (event) => {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  };\n\n  onSubmit = (event, signIn) => {\n    signIn().then(async ({ data }) => {\n      this.setState({ ...INITIAL_STATE });\n\n      localStorage.setItem('token', data.signIn.token);\n\n      await this.props.refetch();\n\n      this.props.history.push(routes.LANDING);\n    });\n\n    event.preventDefault();\n  };\n\n  render() {\n    const { login, password } = this.state;\n    const { classes } = this.props;\n\n    const isInvalid = password === '' || login === '';\n\n    return (\n      <Mutation mutation={SIGN_IN} variables={{ login, password }}>\n        {(signIn, { data, loading, error }) => (\n          <form\n            className={classes.root}\n            onSubmit={(event) => this.onSubmit(event, signIn)}\n          >\n            <div>\n              <TextField\n                required\n                id=\"login-filled-required\"\n                label=\"Email Or Username\"\n                variant=\"outlined\"\n                value={login}\n                onChange={this.onChange}\n                placeholder=\"Email or Username\"\n                name=\"login\"\n              />\n              <TextField\n                variant=\"outlined\"\n                required\n                id=\"pw-filled-required\"\n                name=\"password\"\n                value={password}\n                onChange={this.onChange}\n                type=\"password\"\n                placeholder=\"Password\"\n              />\n            </div>\n            <Button disabled={isInvalid || loading} type=\"submit\">\n              Sign In\n            </Button>\n\n            {error && <ErrorMessage error={error} />}\n          </form>\n        )}\n      </Mutation>\n    );\n  }\n}\n\nexport default withStyles(useStyles, { withTheme: true })(SignInForm);\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { Mutation } from 'react-apollo';\nimport gql from 'graphql-tag';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport TextField from '@material-ui/core/TextField';\n\nimport { SignUpLink } from '../SignUp';\nimport SignInForm from './SignInForm';\nimport * as routes from '../../constants/routes';\nimport ErrorMessage from '../Error';\n\nconst SIGN_IN = gql`\n  mutation($login: String!, $password: String!) {\n    signIn(login: $login, password: $password) {\n      token\n    }\n  }\n`;\n\nconst SignInPage = ({ history, refetch }) => (\n  <>\n    <CssBaseline />\n    <Container maxWidth=\"sm\">\n      <h1>SignIn</h1>\n      <SignInForm history={history} refetch={refetch} />\n      <SignUpLink />\n    </Container>\n  </>\n);\n\nexport default withRouter(SignInPage);\n","import React from 'react';\nimport { Query } from 'react-apollo';\nimport { Redirect } from 'react-router-dom';\n\nimport * as routes from '../../constants/routes';\nimport { GET_ME } from './queries';\n\nconst withAuthorization = conditionFn => Component => props => (\n  <Query query={GET_ME}>\n    {({ data, networkStatus }) => {\n      if (networkStatus < 7) {\n        return null;\n      }\n\n      return conditionFn(data) ? (\n        <Component {...props} />\n      ) : (\n        <Redirect to={routes.SIGN_IN} />\n      );\n    }}\n  </Query>\n);\n\nexport default withAuthorization;\n","import React from 'react';\n\nimport withAuthorization from '../Session/withAuthorization';\n\nconst AccountPage = () => (\n  <div>\n    <h1>Account Page</h1>\n  </div>\n);\n\nexport default withAuthorization(session => session && session.me)(\n  AccountPage,\n);\n","import React from 'react';\n\nimport withAuthorization from '../Session/withAuthorization';\n\nconst AdminPage = () => (\n  <div>\n    <h1>Admin Page</h1>\n  </div>\n);\n\nexport default withAuthorization(\n  session => session && session.me && session.me.role === 'ADMIN',\n)(AdminPage);\n","import React from 'react';\nimport { Router, Route} from 'react-router-dom';\n\nimport Navigation from '../Navigation';\nimport LandingPage from '../Landing';\nimport SignUpPage from '../SignUp';\nimport SignInPage from '../SignIn';\nimport AccountPage from '../Account';\nimport AdminPage from '../Admin';\nimport withSession from '../Session/withSession';\n\nimport * as routes from '../../constants/routes';\nimport history from '../../constants/history';\n\nconst App = ({ session, refetch }) => (\n  <Router history={history} basename={process.env.PUBLIC_URL}>\n    <div>\n      <Navigation session={session} />\n      <Route\n        exact\n        path={routes.LANDING}\n        component={() => <LandingPage />}\n      />\n      <Route\n        exact\n        path={routes.SIGN_UP}\n        component={() => <SignUpPage refetch={refetch} />}\n      />\n      <Route\n        exact\n        path={routes.SIGN_IN}\n        component={() => <SignInPage refetch={refetch} />}\n      />\n      <Route\n        exact\n        path={routes.ACCOUNT}\n        component={() => <AccountPage />}\n      />\n      <Route\n        exact\n        path={routes.ADMIN}\n        component={() => <AdminPage />}\n      />\n    </div>\n  </Router>\n);\n\nexport default withSession(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { ApolloProvider } from 'react-apollo';\nimport { ApolloClient } from 'apollo-client';\nimport { ApolloLink } from 'apollo-link';\nimport { HttpLink } from 'apollo-link-http';\nimport { onError } from 'apollo-link-error';\nimport { InMemoryCache } from 'apollo-cache-inmemory';\nimport {\n  createMuiTheme,\n  ThemeProvider,\n} from '@material-ui/core/styles';\n\nimport materialUiTheme from './constants/theme';\nimport App from './components/App';\nimport { signOut } from './components/SignOut';\n\n// APOLLO CONFIGs\nconst httpLink = new HttpLink({\n  uri: process.env.REACT_APP_GRAPHQL_ENDPOINT,\n});\n\nconst authLink = new ApolloLink((operation, forward) => {\n  operation.setContext(({ headers = {} }) => {\n    const token = localStorage.getItem('token');\n\n    if (token) {\n      headers = { ...headers, 'x-token': token };\n    }\n\n    return { headers };\n  });\n\n  return forward(operation);\n});\n\nconst errorLink = onError(({ graphQLErrors, networkError }) => {\n  if (graphQLErrors) {\n    graphQLErrors.forEach(({ message, locations, path }) => {\n      console.log('GraphQL error', message);\n\n      if (message === 'UNAUTHENTICATED') {\n        signOut(client);\n      }\n    });\n  }\n\n  if (networkError) {\n    console.log('Network error', networkError);\n\n    if (networkError.statusCode === 401) {\n      signOut(client);\n    }\n  }\n});\n\nconst link = ApolloLink.from([authLink, errorLink, httpLink]);\n\nconst cache = new InMemoryCache();\n\nconst client = new ApolloClient({\n  link,\n  cache,\n});\n\n// MATERIAL-UI\nconst theme = createMuiTheme(materialUiTheme);\n\nReactDOM.render(\n  <ApolloProvider client={client}>\n    <ThemeProvider theme={theme}>\n      <App />\n    </ThemeProvider>\n  </ApolloProvider>,\n  document.getElementById('root'),\n);\n","export default {\n    \"palette\":{\n       \"common\":{\n          \"black\":\"#000\",\n          \"white\":\"#fff\"\n       },\n       \"background\":{\n          \"paper\":\"#fff\",\n          \"default\":\"#fafafa\"\n       },\n       \"primary\":{\n          \"light\":\"rgba(116, 195, 30, 1)\",\n          \"main\":\"rgba(87, 161, 3, 1)\",\n          \"dark\":\"rgba(65, 117, 5, 1)\",\n          \"contrastText\":\"#fff\"\n       },\n       \"secondary\":{\n          \"light\":\"rgba(74, 144, 226, 1)\",\n          \"main\":\"rgba(9, 96, 198, 1)\",\n          \"dark\":\"rgba(5, 61, 128, 1)\",\n          \"contrastText\":\"#fff\"\n       },\n       \"error\":{\n          \"light\":\"#e57373\",\n          \"main\":\"#f44336\",\n          \"dark\":\"#d32f2f\",\n          \"contrastText\":\"#fff\"\n       },\n       \"text\":{\n          \"primary\":\"rgba(0, 0, 0, 0.87)\",\n          \"secondary\":\"rgba(0, 0, 0, 0.54)\",\n          \"disabled\":\"rgba(0, 0, 0, 0.38)\",\n          \"hint\":\"rgba(0, 0, 0, 0.38)\"\n       }\n    }\n }"],"sourceRoot":""}