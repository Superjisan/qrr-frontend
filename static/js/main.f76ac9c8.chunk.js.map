{"version":3,"sources":["constants/history.js","components/SignOut/index.js","constants/routes.js","components/Navigation/index.js","components/Session/queries.js","components/Session/withSession.js","components/Recipe/Recipes/index.js","components/Landing/index.js","components/Error/index.js","components/SignUp/index.js","components/SignIn/SignInForm.js","components/SignIn/index.js","components/Session/withAuthorization.js","components/Account/index.js","components/Admin/index.js","components/Recipe/RecipeCreate/index.js","components/Recipe/RecipeUpdate/index.js","components/Ingredient/IngredientsView/index.js","components/Ingredient/IngredientsEdit/index.js","components/Instruction/InstructionsView/index.js","components/App/index.js","index.js","constants/theme.js"],"names":["createHistory","basename","process","signOut","client","localStorage","removeItem","resetStore","history","push","SignOutButton","Button","bgcolor","onClick","useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","NavigationAuth","session","classes","className","AppBar","Toolbar","Typography","variant","SignOut","NavigationNonAuth","to","Navigation","me","GET_ME","gql","withSession","Component","props","query","data","refetch","GET_ALL_RECIPES","Recipes","withStyles","list","width","backgroundColor","palette","background","paper","paddingTop","inline","display","paperRoot","paddingBottom","paddingLeft","paddingRight","marginTop","marginBottom","fontIcon","float","cursor","paragraph","listItem","viewButton","margin","button","queryProps","color","recipes","map","recipe","Paper","key","id","name","author","Edit","ingredients","length","instructions","username","ErrorMessage","error","message","SIGN_UP","INITIAL_STATE","email","password","passwordConfirmation","SignUpForm","state","onChange","event","target","value","this","setState","onSubmit","signUp","then","a","setItem","token","preventDefault","render","isInvalid","mutation","variables","loading","type","placeholder","disabled","SignUpLink","withRouter","SIGN_IN","login","SignInForm","signIn","catch","err","Error","TextField","required","label","withTheme","CssBaseline","Container","maxWidth","withAuthorization","conditionFn","networkStatus","role","ADD_RECIPE","RecipeCreate","addRecipe","console","mutationProps","UPDATE_RECIPE","GET_RECIPE","DELETE_RECIPE","RecipeUpdateForm","useState","get","setName","rating","setRating","originUrl","setOriginUrl","originText","setOriginText","cookingTime","setCookingTime","onNameChange","onRatingChange","Number","onOriginUrlChange","onOriginTextChange","onCookingTimeChange","updateRecipe","log","onDelete","deleteRecipe","textField","inputProps","step","min","max","deleteRecipeMutationProps","style","editButton","useParams","GET_RECIPE_INGREDIENTS","Ingredients","ingredient","linkButton","recipeId","isAllowedToEdit","addButton","GET_RECIPE_INSTRUCTIONS","Instructions","instruction","isEmpty","List","ListItem","ListItemText","primary","secondary","exact","path","component","SignUp","SignIn","Account","Admin","httpLink","HttpLink","uri","authLink","ApolloLink","operation","forward","setContext","headers","getItem","errorLink","onError","graphQLErrors","networkError","forEach","locations","statusCode","link","from","cache","InMemoryCache","ApolloClient","createMuiTheme","ReactDOM","ThemeProvider","document","getElementById"],"mappings":"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","file":"static/js/main.f76ac9c8.chunk.js","sourcesContent":["import createHistory from 'history/createBrowserHistory';\n\nexport default createHistory({\n  basename: process.env.PUBLIC_URL,\n});\n","import React from 'react';\nimport { ApolloConsumer } from 'react-apollo';\nimport Button from '@material-ui/core/Button';\n\nimport * as routes from '../../constants/routes';\nimport history from '../../constants/history';\n\nconst SignOutButton = () => (\n  <ApolloConsumer>\n    {(client) => (\n      <Button bgcolor=\"primary.light\" onClick={() => signOut(client)}>\n        Sign Out\n      </Button>\n    )}\n  </ApolloConsumer>\n);\n\nconst signOut = (client) => {\n  localStorage.removeItem('token');\n  client.resetStore();\n  history.push(routes.SIGN_IN);\n};\n\nexport { signOut };\n\nexport default SignOutButton;\n","export const LANDING = '/';\nexport const SIGN_UP = '/signup';\nexport const SIGN_IN = '/signin';\nexport const ACCOUNT = '/account';\nexport const ADMIN = '/admin';\n\nexport const ADD_RECIPE=\"/add-recipe\";\nexport const UPDATE_RECIPE=\"/update-recipe/:id\";\n\nexport const VIEW_INSTRUCTIONS=\"/view-instructions/:recipeId\";\nexport const ADD_INSTRUCTION=\"/add-instruction/:recipeId\";\nexport const EDIT_INSTRUCTIONS=\"/edit-instructions/:recipeId\";\nexport const UPDATE_INSTRUCTION=\"/update-instruction/:instructionId\";\n\nexport const VIEW_INGREDIENTS=\"/view-ingredients/:recipeId\";\nexport const ADD_INGREDIENT=\"/add-ingredient/:recipeId\"\nexport const EDIT_INGREDIENTS=\"/edit-ingredients/:recipeId\";\nexport const UPDATE_INGREDIENT=\"/update-ingredient/:instructionId\"\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Link } from 'react-router-dom';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\n\nimport * as routes from '../../constants/routes';\nimport SignOutButton from '../SignOut';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n}));\n\nconst Navigation = ({ session }) => (\n  <div>\n    {session && session.me ? (\n      <NavigationAuth session={session} />\n    ) : (\n      <NavigationNonAuth />\n    )}\n  </div>\n);\n\nconst NavigationAuth = ({ session }) => {\n  const classes = useStyles();\n  return (\n    <div className={classes}>\n      <AppBar>\n        <Toolbar>\n          <Typography variant=\"h6\" className={classes.title}>\n            QR^2\n          </Typography>\n          <Typography>\n            <SignOutButton />\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <Toolbar />\n    </div>\n  );\n};\n\nconst NavigationNonAuth = () => {\n  const classes = useStyles();\n  return (\n    <div className={classes}>\n      <AppBar>\n        <Toolbar>\n          <Typography variant=\"h6\" className={classes.title}>\n            QR^2\n          </Typography>\n          <Typography>\n            <Link to={routes.SIGN_IN}>\n              <Button bgcolor=\"contrastText\">Sign In</Button>\n            </Link>\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <Toolbar />\n    </div>\n  );\n};\n\nexport default Navigation;\n","import gql from 'graphql-tag';\n\nexport const GET_ME = gql`\n  {\n    me {\n      id\n      username\n      email\n      role\n    }\n  }\n`;\n","import React from 'react';\nimport { Query } from 'react-apollo';\nimport { GET_ME } from './queries';\n\nconst withSession = Component => props => (\n  <Query query={GET_ME}>\n    {({ data, refetch }) => (\n      <Component {...props} session={data} refetch={refetch} />\n    )}\n  </Query>\n);\n\nexport default withSession;\n","import gql from 'graphql-tag';\nimport { Query } from 'react-apollo';\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { Edit } from '@material-ui/icons';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport * as routes from '../../../constants/routes';\n\nconst GET_ALL_RECIPES = gql`\n  query {\n    recipes {\n      id\n      name\n      author {\n        username\n        id\n      }\n      ingredients {\n        qty\n        item {\n          name\n        }\n      }\n      instructions {\n        text\n        ingredients {\n          item {\n            name\n          }\n        }\n      }\n    }\n  }\n`;\n\nconst materialStyles = (theme) => ({\n  list: {\n    width: '100%',\n    backgroundColor: theme.palette.background.paper,\n    paddingTop: 0,\n  },\n  inline: {\n    display: 'inline',\n  },\n  paperRoot: {\n    paddingTop: theme.spacing(2),\n    paddingBottom: theme.spacing(2),\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(2),\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(2),\n  },\n  fontIcon: {\n    float: 'right',\n    marginRight: 5,\n    cursor: 'pointer',\n  },\n  paragraph: {\n    marginTop: 10,\n  },\n  listItem: {\n    paddingTop: 0,\n    paddingBottom: 0,\n  },\n  viewButton: {\n    margin: 5\n  },\n  button: {\n    width: '100%',\n  },\n});\n\nconst RecipesBase = (props) => {\n  const { classes, session } = props;\n\n  return (\n    <Query query={GET_ALL_RECIPES}>\n      {(queryProps) => {\n        const { data } = queryProps;\n\n        return (\n          <div>\n            {session && session.me && (\n              <Link to={routes.ADD_RECIPE}>\n                <Button\n                  className={classes.button}\n                  variant=\"contained\"\n                  color=\"secondary\"\n                >\n                  Add Recipe\n                </Button>\n              </Link>\n            )}\n            {data &&\n              data.recipes &&\n              data.recipes.map((recipe) => {\n                return (\n                    <Paper\n                      className={classes.paperRoot}\n                      key={recipe.id}\n                      variant=\"outlined\"\n                    >\n                      <Typography variant=\"h5\">\n                        {recipe.name}\n                        {session &&\n                          session.me &&\n                          recipe.author.id === session.me.id && (\n                            <Link to={`update-recipe/${recipe.id}`}>\n                              <Edit className={classes.fontIcon} />\n                            </Link>\n                          )}\n                      </Typography>\n                      <Typography>\n                        # of Ingredients: {recipe.ingredients.length}\n                      </Typography>\n                      <Typography>\n                        {`# of Instructions: ${recipe.instructions.length}`}\n                      </Typography>\n                      <Typography>\n                        Author: {recipe.author.username}\n                      </Typography>\n                      <Link to={`/view-ingredients/${recipe.id}`}>\n                        <Button className={classes.viewButton} variant=\"outlined\" color=\"secondary\">\n                          View Ingredients\n                        </Button>\n                      </Link>\n                      <Link to={`/view-instructions/${recipe.id}`}>\n                        <Button className={classes.viewButton} variant=\"outlined\" color=\"secondary\">\n                          View Instructions\n                        </Button>\n                      </Link>\n                    </Paper>\n                );\n              })}\n          </div>\n        );\n      }}\n    </Query>\n  );\n};\n\nconst Recipes = withStyles(materialStyles)(RecipesBase);\n\nexport default Recipes;\n","import React from 'react';\n\nimport withSession from '../Session/withSession';\nimport Recipes from \"../Recipe/Recipes/\"\n\n\nconst Landing = ({ session }) => (\n  <div>\n    <h2>Recipes</h2>\n    <Recipes session={session} />\n  </div>\n);\n\nexport default withSession(Landing);\n","import React from 'react';\n\nconst ErrorMessage = ({ error }) => (\n  <div>\n    <small>{error.message}</small>\n  </div>\n);\n\nexport default ErrorMessage;\n","import React, { Component } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { Mutation } from 'react-apollo';\nimport gql from 'graphql-tag';\n\nimport * as routes from '../../constants/routes';\nimport ErrorMessage from '../Error';\n\nconst SIGN_UP = gql`\n  mutation($username: String!, $email: String!, $password: String!) {\n    signUp(username: $username, email: $email, password: $password) {\n      token\n    }\n  }\n`;\n\nconst INITIAL_STATE = {\n  username: '',\n  email: '',\n  password: '',\n  passwordConfirmation: '',\n};\n\nconst SignUpPage = ({ history, refetch }) => (\n  <div>\n    <h1>SignUp</h1>\n    <SignUpForm history={history} refetch={refetch} />\n  </div>\n);\n\nclass SignUpForm extends Component {\n  state = { ...INITIAL_STATE };\n\n  onChange = event => {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  };\n\n  onSubmit = (event, signUp) => {\n    signUp().then(async ({ data }) => {\n      this.setState({ ...INITIAL_STATE });\n\n      localStorage.setItem('token', data.signUp.token);\n\n      await this.props.refetch();\n\n      this.props.history.push(routes.LANDING);\n    });\n\n    event.preventDefault();\n  };\n\n  render() {\n    const {\n      username,\n      email,\n      password,\n      passwordConfirmation,\n    } = this.state;\n\n    const isInvalid =\n      password !== passwordConfirmation ||\n      password === '' ||\n      email === '' ||\n      username === '';\n\n    return (\n      <Mutation\n        mutation={SIGN_UP}\n        variables={{ username, email, password }}\n      >\n        {(signUp, { data, loading, error }) => (\n          <form onSubmit={event => this.onSubmit(event, signUp)}>\n            <input\n              name=\"username\"\n              value={username}\n              onChange={this.onChange}\n              type=\"text\"\n              placeholder=\"Full Name\"\n            />\n            <input\n              name=\"email\"\n              value={email}\n              onChange={this.onChange}\n              type=\"text\"\n              placeholder=\"Email Address\"\n            />\n            <input\n              name=\"password\"\n              value={password}\n              onChange={this.onChange}\n              type=\"password\"\n              placeholder=\"Password\"\n            />\n            <input\n              name=\"passwordConfirmation\"\n              value={passwordConfirmation}\n              onChange={this.onChange}\n              type=\"password\"\n              placeholder=\"Confirm Password\"\n            />\n            <button disabled={isInvalid || loading} type=\"submit\">\n              Sign Up\n            </button>\n\n            {error && <ErrorMessage error={error} />}\n          </form>\n        )}\n      </Mutation>\n    );\n  }\n}\n\nconst SignUpLink = () => (\n  <p>\n    Don't have an account? <Link to={routes.SIGN_UP}>Sign Up</Link>\n  </p>\n);\n\nexport default withRouter(SignUpPage);\n\nexport { SignUpForm, SignUpLink };\n","import React, { Component } from 'react';\nimport gql from 'graphql-tag';\nimport { Mutation } from 'react-apollo';\nimport { withStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\n\n\nimport * as routes from '../../constants/routes';\nimport ErrorMessage from '../Error';\n\nconst SIGN_IN = gql`\n  mutation($login: String!, $password: String!) {\n    signIn(login: $login, password: $password) {\n      token\n    }\n  }\n`;\n\nconst useStyles = (theme) => ({\n  root: {\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1),\n      width: '100%',\n    },\n  },\n});\n\nconst INITIAL_STATE = {\n  login: '',\n  password: '',\n};\n\nclass SignInForm extends Component {\n  state = { ...INITIAL_STATE };\n\n  onChange = (event) => {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  };\n\n  onSubmit = (event, signIn) => {\n    localStorage.removeItem('token')\n    signIn().then(async ({ data }) => {\n      this.setState({ ...INITIAL_STATE });\n\n      localStorage.setItem('token', data.signIn.token);\n\n      await this.props.refetch();\n\n      this.props.history.push(routes.LANDING);\n    }).catch(err => {\n      throw new Error(err)\n    });\n\n    event.preventDefault();\n  };\n\n  render() {\n    const { login, password } = this.state;\n    const { classes } = this.props;\n\n    const isInvalid = password === '' || login === '';\n\n    return (\n      <Mutation mutation={SIGN_IN} variables={{ login, password }}>\n        {(signIn, { data, loading, error }) => (\n          <form\n            className={classes.root}\n            onSubmit={(event) => this.onSubmit(event, signIn)}\n          >\n            <div>\n              <TextField\n                required\n                id=\"login-filled-required\"\n                label=\"Email Or Username\"\n                variant=\"outlined\"\n                value={login}\n                onChange={this.onChange}\n                placeholder=\"Email or Username\"\n                name=\"login\"\n              />\n              <TextField\n                variant=\"outlined\"\n                required\n                id=\"pw-filled-required\"\n                name=\"password\"\n                value={password}\n                onChange={this.onChange}\n                type=\"password\"\n                placeholder=\"Password\"\n              />\n            </div>\n            <Button disabled={isInvalid || loading} type=\"submit\">\n              Sign In\n            </Button>\n\n            {error && <ErrorMessage error={error} />}\n          </form>\n        )}\n      </Mutation>\n    );\n  }\n}\n\nexport default withStyles(useStyles, { withTheme: true })(SignInForm);\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { Mutation } from 'react-apollo';\nimport gql from 'graphql-tag';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport TextField from '@material-ui/core/TextField';\n\nimport { SignUpLink } from '../SignUp';\nimport SignInForm from './SignInForm';\nimport * as routes from '../../constants/routes';\nimport ErrorMessage from '../Error';\n\nconst SIGN_IN = gql`\n  mutation($login: String!, $password: String!) {\n    signIn(login: $login, password: $password) {\n      token\n    }\n  }\n`;\n\nconst SignInPage = ({ history, refetch }) => (\n  <>\n    <CssBaseline />\n    <Container maxWidth=\"sm\">\n      <h1>SignIn</h1>\n      <SignInForm history={history} refetch={refetch} />\n      <SignUpLink />\n    </Container>\n  </>\n);\n\nexport default withRouter(SignInPage);\n","import React from 'react';\nimport { Query } from 'react-apollo';\nimport { Redirect } from 'react-router-dom';\n\nimport * as routes from '../../constants/routes';\nimport { GET_ME } from './queries';\n\nconst withAuthorization = conditionFn => Component => props => (\n  <Query query={GET_ME}>\n    {({ data, networkStatus }) => {\n      if (networkStatus < 7) {\n        return null;\n      }\n\n      return conditionFn(data) ? (\n        <Component {...props} />\n      ) : (\n        <Redirect to={routes.SIGN_IN} />\n      );\n    }}\n  </Query>\n);\n\nexport default withAuthorization;\n","import React from 'react';\n\nimport withAuthorization from '../Session/withAuthorization';\n\nconst AccountPage = () => (\n  <div>\n    <h1>Account Page</h1>\n  </div>\n);\n\nexport default withAuthorization(session => session && session.me)(\n  AccountPage,\n);\n","import React from 'react';\n\nimport withAuthorization from '../Session/withAuthorization';\n\nconst AdminPage = () => (\n  <div>\n    <h1>Admin Page</h1>\n  </div>\n);\n\nexport default withAuthorization(\n  session => session && session.me && session.me.role === 'ADMIN',\n)(AdminPage);\n","import React, { Component } from 'react';\nimport { Mutation } from 'react-apollo';\nimport gql from 'graphql-tag';\nimport { Link } from 'react-router-dom';\n\nimport withSession from '../../Session/withSession';\nimport ErrorMessage from '../../Error';\n\nimport * as routes from '../../../constants/routes';\n\nconst ADD_RECIPE = gql`\n  mutation($name: String!) {\n    addRecipe(name: $name) {\n      id\n      name\n      author {\n        username\n      }\n    }\n  }\n`;\n\nclass RecipeCreate extends Component {\n  state = {\n    name: '',\n  };\n\n  onChange = (event) => {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  };\n\n  onSubmit = async (event, addRecipe) => {\n    event.preventDefault();\n\n    try {\n      await addRecipe();\n      this.setState({ name: '' });\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  render() {\n    const { session } = this.props;\n    const { name } = this.state;\n    return (\n      <>\n        <Link to={routes.LANDING}>Back To Recipes</Link>\n        {session && session.me ? (\n          <Mutation mutation={ADD_RECIPE} variables={{ name }}>\n            {(addRecipe, mutationProps) => {\n              const { data, loading, error } = mutationProps;\n              return (\n                <form\n                  onSubmit={(event) =>\n                    this.onSubmit(event, addRecipe)\n                  }\n                >\n                  <input\n                    name=\"name\"\n                    value={name}\n                    onChange={this.onChange}\n                  />\n                  <button type=\"submit\">Send</button>\n                  {error && <ErrorMessage error={error} />}\n                </form>\n              );\n            }}\n          </Mutation>\n        ) : (\n          `Not Allowed To Add Recipe, You Must Sign In`\n        )}\n      </>\n    );\n  }\n}\n\nexport default withSession(RecipeCreate);\n","import { get } from 'lodash';\nimport gql from 'graphql-tag';\nimport React, { useState } from 'react';\nimport { Mutation, Query } from 'react-apollo';\nimport { Link, useParams, withRouter } from 'react-router-dom';\n\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { withStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Container from '@material-ui/core/Container';\nimport Button from '@material-ui/core/Button';\n\nimport * as routes from '../../../constants/routes';\nimport withSession from '../../Session/withSession';\nimport ErrorMessage from '../../Error';\n\nconst UPDATE_RECIPE = gql`\n  mutation(\n    $id: ID!\n    $name: String!\n    $rating: Int\n    $originUrl: String\n    $originText: String\n    $cookingTime: String\n  ) {\n    updateRecipe(\n      id: $id\n      name: $name\n      rating: $rating\n      originUrl: $originUrl\n      originText: $originText\n      cookingTime: $cookingTime\n    ) {\n      id\n      name\n      rating\n      originUrl\n      originText\n      cookingTime\n      ingredients {\n        id\n      }\n      instructions {\n        id\n      }\n    }\n  }\n`;\n\nconst GET_RECIPE = gql`\n  query($id: ID!) {\n    recipe(id: $id) {\n      id\n      name\n      rating\n      originUrl\n      originText\n      cookingTime\n      ingredients {\n        id\n      }\n      instructions {\n        id\n      }\n    }\n  }\n`;\n\nconst DELETE_RECIPE = gql`\n  mutation($id: ID!) {\n    deleteRecipe(id: $id)\n  }\n`;\nconst useStyles = (theme) => ({\n  root: {\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1),\n      width: '100%',\n    },\n  },\n  button: {\n    width: `100%`,\n  },\n  editButton: {\n    width: `49%`,\n    marginBottom: 10,\n    marginTop: 10\n  },\n  textField: {\n    marginBottom: 10,\n    width: `100%`,\n  },\n});\n\nconst RecipeUpdateForm = (props) => {\n  const { data, loading, error, classes } = props;\n  const [id, setId] = useState(get(data, 'recipe.id'));\n  const [name, setName] = useState(get(data, 'recipe.name'));\n  const [rating, setRating] = useState(get(data, 'recipe.rating'));\n  const [originUrl, setOriginUrl] = useState(\n    get(data, 'recipe.originUrl'),\n  );\n  const [originText, setOriginText] = useState(\n    get(data, 'recipe.originText'),\n  );\n  const [cookingTime, setCookingTime] = useState(\n    get(data, 'recipe.cookingTime'),\n  );\n\n  const onIdChange = (event) => setId(event.target.value);\n  const onNameChange = (event) => setName(event.target.value);\n  const onRatingChange = (event) =>\n    setRating(Number(event.target.value));\n  const onOriginUrlChange = (event) =>\n    setOriginUrl(event.target.value);\n  const onOriginTextChange = (event) =>\n    setOriginText(event.target.value);\n  const onCookingTimeChange = (event) =>\n    setCookingTime(event.target.value);\n\n  const onSubmit = async (event, updateRecipe) => {\n    event.preventDefault();\n    try {\n      const recipe = await updateRecipe();\n      if (recipe) {\n        console.log('update worked');\n        return recipe;\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const onDelete = async (event, deleteRecipe) => {\n    event.preventDefault();\n    try {\n      const deleted = await deleteRecipe();\n      if (deleted) {\n        console.log('delete worked');\n        props.history.push(routes.LANDING);\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const isInvalid = name === '';\n\n  return (\n    <Container maxWidth=\"sm\">\n      <Mutation\n        mutation={UPDATE_RECIPE}\n        variables={{\n          id,\n          name,\n          rating,\n          originUrl,\n          originText,\n          cookingTime,\n        }}\n      >\n        {(updateRecipe, mutationProps) => {\n          return (\n            <>\n              <form\n                onSubmit={(event) => onSubmit(event, updateRecipe)}\n              >\n                <TextField\n                  required\n                  id=\"name-filled-required\"\n                  label=\"Recipe Name\"\n                  variant=\"outlined\"\n                  value={name}\n                  onChange={onNameChange}\n                  placeholder=\"Recipe Name\"\n                  name=\"name\"\n                  className={classes.textField}\n                />\n                {/* TODO: move to stars */}\n                {/* TODO: figure out bugs here */}\n                <TextField\n                  id=\"rating-filled-required\"\n                  label=\"Recipe Rating\"\n                  variant=\"outlined\"\n                  value={rating}\n                  onChange={onRatingChange}\n                  placeholder=\"Recipe Rating\"\n                  name=\"rating\"\n                  type=\"number\"\n                  className={classes.textField}\n                  inputProps={{\n                    step: 1,\n                    min: 1,\n                    max: 5,\n                  }}\n                />\n                {/* TODO: figure out nulling */}\n                <TextField\n                  id=\"cooking-time-filled\"\n                  label=\"Recipe Cooking Time\"\n                  variant=\"outlined\"\n                  value={cookingTime}\n                  onChange={onCookingTimeChange}\n                  placeholder=\"Recipe Cooking Time\"\n                  name=\"cookingTime\"\n                  className={classes.textField}\n                />\n                <TextField\n                  id=\"origin-url-filled\"\n                  label=\"Recipe URL\"\n                  variant=\"outlined\"\n                  value={originUrl}\n                  onChange={onOriginUrlChange}\n                  placeholder=\"Recipe URL\"\n                  name=\"originUrl\"\n                  className={classes.textField}\n                />\n                <TextField\n                  id=\"origin-text-filled\"\n                  label=\"Recipe Origin\"\n                  variant=\"outlined\"\n                  value={originText}\n                  onChange={onOriginTextChange}\n                  placeholder=\"Recipe URL\"\n                  name=\"originText\"\n                  className={classes.textField}\n                />\n                {error && <ErrorMessage error={error} />}\n\n                <Button\n                  disabled={isInvalid || loading}\n                  type=\"submit\"\n                  className={classes.button}\n                  variant=\"contained\"\n                  color=\"primary\"\n                >\n                  Save\n                </Button>\n              </form>\n            </>\n          );\n        }}\n      </Mutation>\n      <Mutation mutation={DELETE_RECIPE} variables={{ id }}>\n        {(deleteRecipe, deleteRecipeMutationProps) => {\n          return (\n            <Button\n              variant=\"contained\"\n              bgcolor=\"error\"\n              className={classes.button}\n              onClick={(event) => onDelete(event, deleteRecipe)}\n              style={{ marginTop: 10 }}\n            >\n              Delete Recipe\n            </Button>\n          );\n        }}\n      </Mutation>\n      <Link to={`/edit-ingredients/${id}`}>\n        <Button\n          color=\"secondary\"\n          variant=\"contained\"\n          className={classes.editButton}\n          style={{ marginRight: 10 }}\n        >\n          Edit Ingredients\n        </Button>\n      </Link>\n      <Link to={`/instructions-edit/${id}`}>\n        <Button\n          color=\"secondary\"\n          variant=\"contained\"\n          className={classes.editButton}\n        >\n          Edit Instruction\n        </Button>\n      </Link>\n    </Container>\n  );\n};\n\nconst RecipeUpdate = (props) => {\n  let { id } = useParams();\n  const { classes, history } = props;\n  return (\n    <>\n      <Link to={routes.LANDING}>Back To Recipes</Link>\n      <Query query={GET_RECIPE} variables={{ id }}>\n        {(queryProps) => {\n          return get(queryProps, 'data.recipe') &&\n            !get(queryProps, 'loading') ? (\n            <RecipeUpdateForm\n              {...queryProps}\n              classes={classes}\n              history={history}\n            />\n          ) : (\n            <div>Loading...</div>\n          );\n        }}\n      </Query>\n    </>\n  );\n};\n\nexport default withStyles(useStyles, { withTheme: true })(\n  withRouter(withSession(RecipeUpdate)),\n);\n","import { get } from 'lodash';\nimport gql from 'graphql-tag';\nimport { Query } from 'react-apollo';\nimport React, { Component } from 'react';\nimport { Link, useParams, withRouter } from 'react-router-dom';\n\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport * as routes from '../../../constants/routes';\nimport withSession from '../../Session/withSession';\n\nconst GET_RECIPE_INGREDIENTS = gql`\n  query($recipeId: ID!) {\n    recipe(id: $recipeId) {\n      name\n      ingredients {\n        id\n        qty\n        item {\n          name\n        }\n        uom {\n          name\n          alias\n        }\n      }\n    }\n  }\n`;\n\nconst useStyles = (theme) => ({\n  linkButton: {\n    width: '`100%',\n  },\n  paperRoot: {\n    paddingTop: theme.spacing(2),\n    paddingBottom: theme.spacing(2),\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(2),\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(2),\n  },\n});\n\nconst Ingredients = (props) => {\n  const { data, error, classes } = props;\n  return (\n    <div>\n      {data.recipe.ingredients.map((ingredient) => {\n        return (\n          <Paper variant=\"outlined\" key={`ingredient-${ingredient.id}`} className={classes.paperRoot}>\n            <Typography>\n              Item: {get(ingredient, 'item.name')}\n            </Typography>\n            <Typography>\n              Quantity: {get(ingredient, 'qty')}\n            </Typography>\n            {get(ingredient, 'uom') && (\n              <Typography>\n                Unit Of Measure: {get(ingredient, 'uom.name')} -{' '}\n                {get(ingredient, 'uom.alias')}\n              </Typography>\n            )}\n          </Paper>\n        );\n      })}\n    </div>\n  );\n};\n\nconst IngredientsView = (props) => {\n  let { recipeId } = useParams();\n  const { classes } = props;\n  return (\n    <>\n      <Link to={routes.LANDING}>\n        <Button variant=\"outlined\" color=\"secondary\">\n          Back To Recipes\n        </Button>\n      </Link>\n     \n      <Query query={GET_RECIPE_INGREDIENTS} variables={{ recipeId }}>\n        {({ data, loading, error }) => {\n          return (\n            <>\n                 <Typography variant=\"h3\">{get(data, \"recipe.name\")} Ingredients</Typography>\n              {get(data, 'recipe.ingredients') && !loading ? (\n                <Ingredients\n                  data={data}\n                  error={error}\n                  classes={classes}\n                />\n              ) : (\n                'loading'\n              )}\n            </>\n          );\n        }}\n      </Query>\n    </>\n  );\n};\n\nexport default withStyles(useStyles, { withTheme: true })(\n  withRouter(withSession(IngredientsView)),\n);\n","import { get } from 'lodash';\nimport gql from 'graphql-tag';\nimport { Query } from 'react-apollo';\nimport React, { Component } from 'react';\nimport { Link, useParams, withRouter } from 'react-router-dom';\n\nimport { Edit } from '@material-ui/icons';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport * as routes from '../../../constants/routes';\nimport withSession from '../../Session/withSession';\n\nconst GET_RECIPE_INGREDIENTS = gql`\n  query($recipeId: ID!) {\n    recipe(id: $recipeId) {\n      author {\n        id\n      }\n      name\n      ingredients {\n        id\n        qty\n        item {\n          name\n        }\n        uom {\n          name\n          alias\n        }\n      }\n    }\n  }\n`;\n\nconst useStyles = (theme) => ({\n  linkButton: {\n    width: '`100%',\n  },\n  paperRoot: {\n    paddingTop: theme.spacing(2),\n    paddingBottom: theme.spacing(2),\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(2),\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(2),\n  },\n  fontIcon: {\n    float: 'right',\n    marginRight: 5,\n    cursor: 'pointer',\n  },\n  addButton: {\n    width: '100%',\n  },\n});\n\nconst Ingredients = (props) => {\n  const { data, error, classes, me } = props;\n  const isAllowedToEdit = me && data.recipe.author.id === me.id;\n  return (\n    <div>\n      {data.recipe.ingredients.map((ingredient) => {\n        return (\n          <Paper\n            key={`ingredient-${ingredient.id}`}\n            className={classes.paperRoot}\n            variant=\"outlined\"\n          >\n            <Typography>\n              Item: {get(ingredient, 'item.name')}\n              {isAllowedToEdit && (\n                <Link to={`update-ingredient/${ingredient.id}`}>\n                  <Edit className={classes.fontIcon} />\n                </Link>\n              )}\n            </Typography>\n            <Typography>\n              Quantity: {get(ingredient, 'qty')}\n            </Typography>\n            {get(ingredient, 'uom') && (\n              <Typography>\n                Unit Of Measure: {get(ingredient, 'uom.name')} -{' '}\n                {get(ingredient, 'uom.alias')}\n              </Typography>\n            )}\n          </Paper>\n        );\n      })}\n      {isAllowedToEdit && (\n        <Link to={`/add-ingredient/${data.recipe.id}`}>\n          <Button\n            className={classes.linkButton}\n            variant=\"contained\"\n            color=\"secondary\"\n          >\n            Add Ingredient\n          </Button>\n        </Link>\n      )}\n    </div>\n  );\n};\n\nconst IngredientsEdit = (props) => {\n  console.log('coming here');\n  let { recipeId } = useParams();\n  const { classes, session } = props;\n  return (\n    <>\n      <Link to={routes.LANDING}>\n        <Button variant=\"outlined\" color=\"secondary\">\n          Back To Recipes\n        </Button>\n      </Link>\n\n      <Query query={GET_RECIPE_INGREDIENTS} variables={{ recipeId }}>\n        {({ data, loading, error }) => {\n          return (\n            <>\n              <Typography variant=\"h3\">\n                {get(data, 'recipe.name')} Ingredients\n              </Typography>\n              {get(data, 'recipe.ingredients') && !loading ? (\n                <Ingredients\n                  data={data}\n                  error={error}\n                  classes={classes}\n                  me={session.me}\n                />\n              ) : (\n                'loading'\n              )}\n            </>\n          );\n        }}\n      </Query>\n    </>\n  );\n};\n\nexport default withStyles(useStyles, { withTheme: true })(\n  withRouter(IngredientsEdit),\n);\n","import { get, isEmpty } from 'lodash';\nimport gql from 'graphql-tag';\nimport { Query } from 'react-apollo';\nimport React, { Component } from 'react';\nimport { Link, useParams, withRouter } from 'react-router-dom';\n\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\n\nimport * as routes from '../../../constants/routes';\nimport withSession from '../../Session/withSession';\n\nconst GET_RECIPE_INSTRUCTIONS = gql`\n  query($recipeId: ID!) {\n    recipe(id: $recipeId) {\n      name\n      instructions {\n        text\n        textIngredients {\n          wordIndex\n          ingredientId\n        }\n        textTimes {\n          wordIndex\n          timeValue\n        }\n        ingredients {\n          id\n          category\n\n          qty\n          item {\n            name\n          }\n          uom {\n            name\n            alias\n          }\n        }\n      }\n    }\n  }\n`;\n\nconst useStyles = (theme) => ({\n  linkButton: {\n    width: '`100%',\n  },\n  paperRoot: {\n    paddingTop: theme.spacing(2),\n    paddingBottom: theme.spacing(2),\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(2),\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(2),\n  },\n});\n\nconst Instructions = (props) => {\n  const { data, error, classes } = props;\n  return (\n    <div>\n      {data.recipe.instructions.map((instruction) => {\n        return (\n          <Paper\n            variant=\"outlined\"\n            key={`instruction-${instruction.id}`}\n            className={classes.paperRoot}\n          >\n            <Typography variant=\"body1\">\n              {get(instruction, 'text')}\n            </Typography>\n\n            {!isEmpty(get(instruction, 'ingredients')) && (\n              <List>\n                <Typography variant=\"subtitle2\">\n                  Ingredients\n                </Typography>\n                {get(instruction, 'ingredients').map((ingredient) => {\n                  return (\n                    <ListItem>\n                      <ListItemText\n                        primary={`Item: ${get(\n                          ingredient,\n                          'item.name',\n                        )}`}\n                        secondary={`Quantity: ${get(\n                          ingredient,\n                          'qty',\n                        )} ${\n                          get(ingredient, 'uom') &&\n                          ` \n                                ${get(ingredient, 'uom.name')} - \n                                ${get(ingredient, 'uom.alias')}`\n                        }`}\n                      />\n                    </ListItem>\n                  );\n                })}\n              </List>\n            )}\n          </Paper>\n        );\n      })}\n    </div>\n  );\n};\n\nconst InstructionsView = (props) => {\n  let { recipeId } = useParams();\n  const { classes } = props;\n  return (\n    <>\n      <Link to={routes.LANDING}>\n        <Button variant=\"outlined\" color=\"secondary\">\n          Back To Recipes\n        </Button>\n      </Link>\n\n      <Query query={GET_RECIPE_INSTRUCTIONS} variables={{ recipeId }}>\n        {({ data, loading, error }) => {\n          return (\n            <>\n              <Typography variant=\"h2\">\n                {get(data, 'recipe.name')} Instructions\n              </Typography>\n              {get(data, 'recipe.instructions') && !loading ? (\n                <Instructions\n                  data={data}\n                  error={error}\n                  classes={classes}\n                />\n              ) : (\n                'loading'\n              )}\n            </>\n          );\n        }}\n      </Query>\n    </>\n  );\n};\n\nexport default withStyles(useStyles, { withTheme: true })(\n  withRouter(withSession(InstructionsView)),\n);\n","import React from 'react';\nimport { Router, Route} from 'react-router-dom';\n\nimport Navigation from '../Navigation';\nimport LandingPage from '../Landing';\nimport SignUpPage from '../SignUp';\nimport SignInPage from '../SignIn';\nimport AccountPage from '../Account';\nimport AdminPage from '../Admin';\n\nimport RecipeCreate from '../Recipe/RecipeCreate';\nimport RecipeUpdate from '../Recipe/RecipeUpdate';\n\nimport IngredientsView from '../Ingredient/IngredientsView';\nimport IngredientsEdit from '../Ingredient/IngredientsEdit';\n\nimport InstructionsView from '../Instruction/InstructionsView';\n\nimport withSession from '../Session/withSession';\n\nimport * as routes from '../../constants/routes';\nimport history from '../../constants/history';\n\nconst App = ({ session, refetch }) => (\n  <Router history={history} basename={process.env.PUBLIC_URL}>\n    <div>\n      <Navigation session={session} />\n      <Route\n        exact\n        path={routes.LANDING}\n        component={() => <LandingPage />}\n      />\n      <Route\n        exact\n        path={routes.SIGN_UP}\n        component={() => <SignUpPage refetch={refetch} />}\n      />\n      <Route\n        exact\n        path={routes.SIGN_IN}\n        component={() => <SignInPage refetch={refetch} />}\n      />\n      <Route\n        exact\n        path={routes.ACCOUNT}\n        component={() => <AccountPage />}\n      />\n      <Route\n        exact\n        path={routes.ADMIN}\n        component={() => <AdminPage />}\n      />\n      <Route\n        exact\n        path={routes.ADD_RECIPE}\n        component={() => <RecipeCreate />}\n      />\n      <Route\n        path={routes.UPDATE_RECIPE}\n        component={() => <RecipeUpdate />}\n      />\n      <Route \n        path={routes.VIEW_INGREDIENTS}\n        component={() => <IngredientsView /> }\n      />\n      <Route \n        path={routes.VIEW_INSTRUCTIONS}\n        component={() => <InstructionsView /> }\n      />\n      <Route \n        path={routes.EDIT_INGREDIENTS}\n        component={() => <IngredientsEdit session={session} />}\n      />\n    </div>\n  </Router>\n);\n\nexport default withSession(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { ApolloProvider } from 'react-apollo';\nimport { ApolloClient } from 'apollo-client';\nimport { ApolloLink } from 'apollo-link';\nimport { HttpLink } from 'apollo-link-http';\nimport { onError } from 'apollo-link-error';\nimport { InMemoryCache } from 'apollo-cache-inmemory';\nimport {\n  createMuiTheme,\n  ThemeProvider,\n} from '@material-ui/core/styles';\n\nimport materialUiTheme from './constants/theme';\nimport App from './components/App';\nimport { signOut } from './components/SignOut';\n\n// APOLLO CONFIGs\nconst httpLink = new HttpLink({\n  uri: process.env.REACT_APP_GRAPHQL_ENDPOINT,\n});\n\nconst authLink = new ApolloLink((operation, forward) => {\n  operation.setContext(({ headers = {} }) => {\n    const token = localStorage.getItem('token');\n\n    if (token) {\n      headers = { ...headers, 'x-token': token };\n    }\n\n    return { headers };\n  });\n\n  return forward(operation);\n});\n\nconst errorLink = onError(({ graphQLErrors, networkError }) => {\n  if (graphQLErrors) {\n    graphQLErrors.forEach(({ message, locations, path }) => {\n      console.log('GraphQL error', message);\n\n      if (message === 'UNAUTHENTICATED') {\n        signOut(client);\n      }\n    });\n  }\n\n  if (networkError) {\n    console.log('Network error', networkError);\n\n    if (networkError.statusCode === 401) {\n      signOut(client);\n    }\n  }\n});\n\nconst link = ApolloLink.from([authLink, errorLink, httpLink]);\n\nconst cache = new InMemoryCache();\n\nconst client = new ApolloClient({\n  link,\n  cache,\n});\n\n// MATERIAL-UI\nconst theme = createMuiTheme(materialUiTheme);\n\nReactDOM.render(\n  <ApolloProvider client={client}>\n    <ThemeProvider theme={theme}>\n      <App />\n    </ThemeProvider>\n  </ApolloProvider>,\n  document.getElementById('root'),\n);\n","export default {\n    \"palette\":{\n       \"common\":{\n          \"black\":\"#000\",\n          \"white\":\"#fff\"\n       },\n       \"background\":{\n          \"paper\":\"#fff\",\n          \"default\":\"#fafafa\"\n       },\n       \"primary\":{\n          \"light\":\"rgba(116, 195, 30, 1)\",\n          \"main\":\"rgba(87, 161, 3, 1)\",\n          \"dark\":\"rgba(65, 117, 5, 1)\",\n          \"contrastText\":\"#fff\"\n       },\n       \"secondary\":{\n          \"light\":\"rgba(74, 144, 226, 1)\",\n          \"main\":\"rgba(9, 96, 198, 1)\",\n          \"dark\":\"rgba(5, 61, 128, 1)\",\n          \"contrastText\":\"#fff\"\n       },\n       \"error\":{\n          \"light\":\"#e57373\",\n          \"main\":\"#f44336\",\n          \"dark\":\"#d32f2f\",\n          \"contrastText\":\"#fff\"\n       },\n       \"text\":{\n          \"primary\":\"rgba(0, 0, 0, 0.87)\",\n          \"secondary\":\"rgba(0, 0, 0, 0.54)\",\n          \"disabled\":\"rgba(0, 0, 0, 0.38)\",\n          \"hint\":\"rgba(0, 0, 0, 0.38)\"\n       }\n    }\n }"],"sourceRoot":""}